const countryCodes = new Map();
const fs = require('fs');

//* AI managed to messed up the order while writing a simple Map table
//* And there's probably an easy way to reverse the values
//* But I like verbose
// countryCodes.set("Afghanistan", "AFG");
// countryCodes.set("Albania", "ALB");
// countryCodes.set("Algeria", "DZA");
// countryCodes.set("American Samoa", "ASM");
// countryCodes.set("Andorra", "AND");
// countryCodes.set("Angola", "AGO");
// countryCodes.set("Anguilla", "AIA");
// countryCodes.set("Antarctica", "ATA");
// countryCodes.set("Antigua and Barbuda", "ATG");
// countryCodes.set("Argentina", "ARG");
// countryCodes.set("Armenia", "ARM");
// countryCodes.set("Aruba", "ABW");
// countryCodes.set("Australia", "AUS");
// countryCodes.set("Austria", "AUT");
// countryCodes.set("Azerbaijan", "AZE");
// countryCodes.set("Bahamas (the)", "BHS");
// countryCodes.set("Bahrain", "BHR");
// and so on...


//! Don't really need this code anymore but I'm happy it worked so I'll just comment it out and leave it
// let arrCode = []
// let arrName = [];
// for (const x of countryCodes.values()) {
// arrCode.push(x);
// }
// for (const y of countryCodes.keys()) {
//   arrName.push(y);
// }
// for (let i = 0; i < arrCode.length; i++) {
//   fs.appendFileSync('./CountryHashTable.js', `countryCodes.set("${arrCode[i]}", "${arrName[i]}");\n`);
// }


countryCodes.set("AFG", "Afghanistan");
countryCodes.set("ALB", "Albania");
countryCodes.set("DZA", "Algeria");
countryCodes.set("ASM", "American Samoa");
countryCodes.set("AND", "Andorra");
countryCodes.set("AGO", "Angola");
countryCodes.set("AIA", "Anguilla");
countryCodes.set("ATA", "Antarctica");
countryCodes.set("ATG", "Antigua and Barbuda");
countryCodes.set("ARG", "Argentina");
countryCodes.set("ARM", "Armenia");
countryCodes.set("ABW", "Aruba");
countryCodes.set("AUS", "Australia");
countryCodes.set("AUT", "Austria");
countryCodes.set("AZE", "Azerbaijan");
countryCodes.set("BHS", "Bahamas (the)");
countryCodes.set("BHR", "Bahrain");
countryCodes.set("BGD", "Bangladesh");
countryCodes.set("BRB", "Barbados");
countryCodes.set("BLR", "Belarus");
countryCodes.set("BEL", "Belgium");
countryCodes.set("BLZ", "Belize");
countryCodes.set("BEN", "Benin");
countryCodes.set("BMU", "Bermuda");
countryCodes.set("BTN", "Bhutan");
countryCodes.set("BOL", "Bolivia (Plurinational State of)");
countryCodes.set("BES", "Bonaire, Sint Eustatius and Saba");
countryCodes.set("BIH", "Bosnia and Herzegovina");
countryCodes.set("BWA", "Botswana");
countryCodes.set("BVT", "Bouvet Island");
countryCodes.set("BRA", "Brazil");
countryCodes.set("IOT", "British Indian Ocean Territory (the)");
countryCodes.set("BRN", "Brunei Darussalam");
countryCodes.set("BGR", "Bulgaria");
countryCodes.set("BFA", "Burkina Faso");
countryCodes.set("BDI", "Burundi");
countryCodes.set("CPV", "Cabo Verde");
countryCodes.set("KHM", "Cambodia");
countryCodes.set("CMR", "Cameroon");
countryCodes.set("CAN", "Canada");
countryCodes.set("CYM", "Cayman Islands (the)");
countryCodes.set("CAF", "Central African Republic (the)");
countryCodes.set("TCD", "Chad");
countryCodes.set("CHL", "Chile");
countryCodes.set("CHN", "China");
countryCodes.set("CXR", "Christmas Island");
countryCodes.set("CCK", "Cocos (Keeling) Islands (the)");
countryCodes.set("COL", "Colombia");
countryCodes.set("COM", "Comoros (the)");
countryCodes.set("COD", "Congo (the Democratic Republic of the)");
countryCodes.set("COG", "Congo (the)");
countryCodes.set("COK", "Cook Islands (the)");
countryCodes.set("CRI", "Costa Rica");
countryCodes.set("HRV", "Croatia");
countryCodes.set("CUB", "Cuba");
countryCodes.set("CUW", "Curaçao");
countryCodes.set("CYP", "Cyprus");
countryCodes.set("CZE", "Czechia");
countryCodes.set("CIV", "Côte d'Ivoire");
countryCodes.set("DNK", "Denmark");
countryCodes.set("DJI", "Djibouti");
countryCodes.set("DMA", "Dominica");
countryCodes.set("DOM", "Dominican Republic (the)");
countryCodes.set("ECU", "Ecuador");
countryCodes.set("EGY", "Egypt");
countryCodes.set("SLV", "El Salvador");
countryCodes.set("GNQ", "Equatorial Guinea");
countryCodes.set("ERI", "Eritrea");
countryCodes.set("EST", "Estonia");
countryCodes.set("SWZ", "Eswatini");
countryCodes.set("ETH", "Ethiopia");
countryCodes.set("FLK", "Falkland Islands (the) [Malvinas]");
countryCodes.set("FRO", "Faroe Islands (the)");
countryCodes.set("FJI", "Fiji");
countryCodes.set("FIN", "Finland");
countryCodes.set("FRA", "France");
countryCodes.set("GUF", "French Guiana");
countryCodes.set("PYF", "French Polynesia");
countryCodes.set("ATF", "French Southern Territories (the)");
countryCodes.set("GAB", "Gabon");
countryCodes.set("GMB", "Gambia (the)");
countryCodes.set("GEO", "Georgia");
countryCodes.set("DEU", "Germany");
countryCodes.set("GHA", "Ghana");
countryCodes.set("GIB", "Gibraltar");
countryCodes.set("GRC", "Greece");
countryCodes.set("GRL", "Greenland");
countryCodes.set("GRD", "Grenada");
countryCodes.set("GLP", "Guadeloupe");
countryCodes.set("GUM", "Guam");
countryCodes.set("GTM", "Guatemala");
countryCodes.set("GGY", "Guernsey");
countryCodes.set("GIN", "Guinea");
countryCodes.set("GNB", "Guinea-Bissau");
countryCodes.set("GUY", "Guyana");
countryCodes.set("HTI", "Haiti");
countryCodes.set("HMD", "Heard Island and McDonald Islands");
countryCodes.set("VAT", "Holy See (the)");
countryCodes.set("HND", "Honduras");
countryCodes.set("HKG", "Hong Kong");
countryCodes.set("HUN", "Hungary");
countryCodes.set("ISL", "Iceland");
countryCodes.set("IND", "India");
countryCodes.set("IDN", "Indonesia");
countryCodes.set("IRN", "Iran (Islamic Republic of)");
countryCodes.set("IRQ", "Iraq");
countryCodes.set("IRL", "Ireland");
countryCodes.set("IMN", "Isle of Man");
countryCodes.set("ISR", "Israel");
countryCodes.set("ITA", "Italy");
countryCodes.set("JAM", "Jamaica");
countryCodes.set("JPN", "Japan");
countryCodes.set("JEY", "Jersey");
countryCodes.set("JOR", "Jordan");
countryCodes.set("KAZ", "Kazakhstan");
countryCodes.set("KEN", "Kenya");
countryCodes.set("KIR", "Kiribati");
countryCodes.set("PRK", "Korea (the Democratic People's Republic of)");
countryCodes.set("KOR", "Korea (the Republic of)");
countryCodes.set("KWT", "Kuwait");
countryCodes.set("KGZ", "Kyrgyzstan");
countryCodes.set("LAO", "Lao People's Democratic Republic (the)");
countryCodes.set("LVA", "Latvia");
countryCodes.set("LBN", "Lebanon");
countryCodes.set("LSO", "Lesotho");
countryCodes.set("LBR", "Liberia");
countryCodes.set("LBY", "Libya");
countryCodes.set("LIE", "Liechtenstein");
countryCodes.set("LTU", "Lithuania");
countryCodes.set("LUX", "Luxembourg");
countryCodes.set("MAC", "Macao");
countryCodes.set("MDG", "Madagascar");
countryCodes.set("MWI", "Malawi");
countryCodes.set("MYS", "Malaysia");
countryCodes.set("MDV", "Maldives");
countryCodes.set("MLI", "Mali");
countryCodes.set("MLT", "Malta");
countryCodes.set("MHL", "Marshall Islands (the)");
countryCodes.set("MTQ", "Martinique");
countryCodes.set("MRT", "Mauritania");
countryCodes.set("MUS", "Mauritius");
countryCodes.set("MYT", "Mayotte");
countryCodes.set("MEX", "Mexico");
countryCodes.set("FSM", "Micronesia (Federated States of)");
countryCodes.set("MDA", "Moldova (the Republic of)");
countryCodes.set("MCO", "Monaco");
countryCodes.set("MNG", "Mongolia");
countryCodes.set("MNE", "Montenegro");
countryCodes.set("MSR", "Montserrat");
countryCodes.set("MAR", "Morocco");
countryCodes.set("MOZ", "Mozambique");
countryCodes.set("MMR", "Myanmar");
countryCodes.set("NAM", "Namibia");
countryCodes.set("NRU", "Nauru");
countryCodes.set("NPL", "Nepal");
countryCodes.set("NLD", "Netherlands (the)");
countryCodes.set("NCL", "New Caledonia");
countryCodes.set("NZL", "New Zealand");
countryCodes.set("NIC", "Nicaragua");
countryCodes.set("NER", "Niger (the)");
countryCodes.set("NGA", "Nigeria");
countryCodes.set("NIU", "Niue");
countryCodes.set("NFK", "Norfolk Island");
countryCodes.set("MNP", "Northern Mariana Islands (the)");
countryCodes.set("NOR", "Norway");
countryCodes.set("OMN", "Oman");
countryCodes.set("PAK", "Pakistan");
countryCodes.set("PLW", "Palau");
countryCodes.set("PSE", "Palestine, State of");
countryCodes.set("PAN", "Panama");
countryCodes.set("PNG", "Papua New Guinea");
countryCodes.set("PRY", "Paraguay");
countryCodes.set("PER", "Peru");
countryCodes.set("PHL", "Philippines (the)");
countryCodes.set("PCN", "Pitcairn");
countryCodes.set("POL", "Poland");
countryCodes.set("PRT", "Portugal");
countryCodes.set("PRI", "Puerto Rico");
countryCodes.set("QAT", "Qatar");
countryCodes.set("MKD", "Republic of North Macedonia");
countryCodes.set("ROU", "Romania");
countryCodes.set("RUS", "Russian Federation (the)");
countryCodes.set("RWA", "Rwanda");
countryCodes.set("REU", "Réunion");
countryCodes.set("BLM", "Saint Barthélemy");
countryCodes.set("SHN", "Saint Helena, Ascension and Tristan da Cunha");
countryCodes.set("KNA", "Saint Kitts and Nevis");
countryCodes.set("LCA", "Saint Lucia");
countryCodes.set("MAF", "Saint Martin (French part)");
countryCodes.set("SPM", "Saint Pierre and Miquelon");
countryCodes.set("VCT", "Saint Vincent and the Grenadines");
countryCodes.set("WSM", "Samoa");
countryCodes.set("SMR", "San Marino");
countryCodes.set("STP", "Sao Tome and Principe");
countryCodes.set("SAU", "Saudi Arabia");
countryCodes.set("SEN", "Senegal");
countryCodes.set("SRB", "Serbia");
countryCodes.set("SYC", "Seychelles");
countryCodes.set("SLE", "Sierra Leone");
countryCodes.set("SGP", "Singapore");
countryCodes.set("SXM", "Sint Maarten (Dutch part)");
countryCodes.set("SVK", "Slovakia");
countryCodes.set("SVN", "Slovenia");
countryCodes.set("SLB", "Solomon Islands");
countryCodes.set("SOM", "Somalia");
countryCodes.set("ZAF", "South Africa");
countryCodes.set("SGS", "South Georgia and the South Sandwich Islands");
countryCodes.set("SSD", "South Sudan");
countryCodes.set("ESP", "Spain");
countryCodes.set("LKA", "Sri Lanka");
countryCodes.set("SDN", "Sudan (the)");
countryCodes.set("SUR", "Suriname");
countryCodes.set("SJM", "Svalbard and Jan Mayen");
countryCodes.set("SWE", "Sweden");
countryCodes.set("CHE", "Switzerland");
countryCodes.set("SYR", "Syrian Arab Republic");
countryCodes.set("TWN", "Taiwan (Province of China)");
countryCodes.set("TJK", "Tajikistan");
countryCodes.set("TZA", "Tanzania, United Republic of");
countryCodes.set("THA", "Thailand");
countryCodes.set("TLS", "Timor-Leste");
countryCodes.set("TGO", "Togo");
countryCodes.set("TKL", "Tokelau");
countryCodes.set("TON", "Tonga");
countryCodes.set("TTO", "Trinidad and Tobago");
countryCodes.set("TUN", "Tunisia");
countryCodes.set("TUR", "Turkey");
countryCodes.set("TKM", "Turkmenistan");
countryCodes.set("TCA", "Turks and Caicos Islands (the)");
countryCodes.set("TUV", "Tuvalu");
countryCodes.set("UGA", "Uganda");
countryCodes.set("UKR", "Ukraine");
countryCodes.set("ARE", "United Arab Emirates (the)");
countryCodes.set("GBR", "United Kingdom of Great Britain and Northern Ireland (the)");
countryCodes.set("UMI", "United States Minor Outlying Islands (the)");
countryCodes.set("USA", "United States of America (the)");
countryCodes.set("URY", "Uruguay");
countryCodes.set("UZB", "Uzbekistan");
countryCodes.set("VUT", "Vanuatu");
countryCodes.set("VEN", "Venezuela (Bolivarian Republic of)");
countryCodes.set("VNM", "Viet Nam");
countryCodes.set("VGB", "Virgin Islands (British)");
countryCodes.set("VIR", "Virgin Islands (U.S.)");
countryCodes.set("WLF", "Wallis and Futuna");
countryCodes.set("ESH", "Western Sahara");
countryCodes.set("YEM", "Yemen");
countryCodes.set("ZMB", "Zambia");
countryCodes.set("ZWE", "Zimbabwe");
countryCodes.set("ALA", "Åland Islands");


module.exports = {
  countryCodes
}